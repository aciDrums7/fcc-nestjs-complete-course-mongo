openapi: 3.0.0
paths:
  /api/v1:
    get:
      operationId: AppController::getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/songs:
    post:
      operationId: SongsController::create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSongDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: &a1
        - songs
    get:
      operationId: SongsController::findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *a1
  /api/v1/songs/{id}:
    get:
      operationId: SongsController::findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *a1
    patch:
      operationId: SongsController::update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSongDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: *a1
    delete:
      operationId: SongsController::remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *a1
info:
  title: Spotify Clone API - MongoDB
  description: freeCodeCamp - NestJS Complete Course API
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3001
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: Enter JWT token
  schemas:
    CreateSongDto:
      type: object
      properties:
        title:
          type: string
        releasedDate:
          format: date-time
          type: string
        duration:
          format: date-time
          type: string
        lyrics:
          type: string
      required:
        - title
        - releasedDate
        - duration
        - lyrics
    UpdateSongDto:
      type: object
      properties:
        title:
          type: string
        releasedDate:
          format: date-time
          type: string
        duration:
          format: date-time
          type: string
        lyrics:
          type: string
